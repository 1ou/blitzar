plugins {
    id 'java'
    id 'application'
    id 'java-library'
    id 'idea'
}

application {
    mainClassName = "io.toxa108.blitzar.storage.BlitzarDatabase"
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation 'org.projectlombok:lombok:1.18.10'
    implementation 'com.google.guava:guava:22.0'
    implementation 'org.slf4j:slf4j-simple:2.0.0-alpha1'

//    jmhImplementation 'org.openjdk.jmh:jmh-core:1.21'
//    jmhImplementation 'org.openjdk.jmh:jmh-generator-annprocess:1.21'

    testCompile 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testCompile 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
    testCompile 'org.junit.jupiter:junit-jupiter-params:5.6.0'
    testCompile 'org.mockito:mockito-all:1.9.5'
}

sourceSets {
    jmh {
        java.srcDirs = ['src/jmh/java']
        resources.srcDirs = ['src/jmh/resources']
        compileClasspath += sourceSets.main.runtimeClasspath
    }
}

task jmh(type: JavaExec, dependsOn: jmhClasses) {
    main = 'org.openjdk.jmh.Main'
    classpath = sourceSets.jmh.compileClasspath + sourceSets.jmh.runtimeClasspath
}

//tasks {
//    register("jmh", type = JavaExec::class) {
//        dependsOn("jmhClasses")
//        group = "benchmark"
//        main = "org.openjdk.jmh.Main"
//        classpath = sourceSets["jmh"].runtimeClasspath
//        // To pass parameters ("-h" gives a list of possible parameters)
//        // args(listOf("-h"))
//    }
//}

test {
    useJUnitPlatform {
        includeEngines 'junit-jupiter'
        excludeTags 'inttest'
    }
}